// Game class - manages the game logic
class Game {
	field Player player;
	field Target target;
	field int score;
	
	// Constructor initializes the game
	constructor Game new() {
		let player = Player.new(250, 120);
		let target = Target.new(150, 150);
		let score = 0;
		return this;
	}
	
	// Start the game
	method void start() {
		var char currentKey;
		var boolean exit;
		
		let exit = false;
		
		// Draw the initial game state
		do Screen.clearScreen();
		do drawBorders();
		do player.draw();
		do target.draw();
		do updateScore();
		
		// Main game loop
		while(~exit) {
			// Handle keyboard input
			let currentKey = Keyboard.keyPressed();
			
			if (currentKey = 131) { // Up arrow
				do player.setDirection(1);
			}
			if (currentKey = 133) { // Down arrow
				do player.setDirection(2);
			}
			if (currentKey = 130) { // Left arrow
				do player.setDirection(3);
			}
			if (currentKey = 132) { // Right arrow
				do player.setDirection(4);
			}
			if (currentKey = 81) { // 'q' to quit
				let exit = true;
			}
			
			// Move the player
			do player.move();
			
			// Check for collision with target
			if (checkTargetHit()) {
				let score = score + 10;
				do target.remove();
				// Generate a new target at a random position
				do target.dispose();
				let target = Target.new(
					(player.getX() + 100) & 511, // Simple pseudo-random position
					(player.getY() + 120) & 254
				);
				do target.draw();
				do updateScore();
			}
			
			// Small delay to control game speed
			do Sys.wait(50);
		}
		
		// Game over screen
		do Screen.clearScreen();
		do Output.moveCursor(10, 28);
		do Output.printString("GAME OVER");
		do Output.moveCursor(12, 25);
		do Output.printString("Final Score: ");
		do Output.printInt(score);
		
		// Clean up
		do Sys.wait(3000); // Wait 3 seconds before exiting
		do dispose();
		return;
	}
	
	// Draw the game borders
	method void drawBorders() {
		do Screen.setColor(true);
		do Screen.drawRectangle(0, 0, 511, 0); // Top
		do Screen.drawRectangle(0, 0, 0, 255); // Left
		do Screen.drawRectangle(0, 254, 511, 254); // Bottom
		do Screen.drawRectangle(511, 0, 511, 254); // Right
		return;
	}
	
	// Update the score display
	method void updateScore() {
		do Output.moveCursor(0, 0);
		do Output.printString("Score: ");
		do Output.printInt(score);
		return;
	}


	
	// Check if player hit the target
	method boolean checkTargetHit() {
		var int playerX, playerY, targetX, targetY;
		
		let playerX = player.getX();
		let playerY = player.getY();
		let targetX = target.getX();
		let targetY = target.getY();
		
		// Check for collision (simple bounding box test)
		if ((playerX + 10 > targetX) & (playerX < targetX + 10) & 
			(playerY + 10 > targetY) & (playerY < targetY + 10)) {
			return true;
		}
		
		return false;
	}
	
	// Deallocate memory
	method void dispose() {
		do player.dispose();
		do target.dispose();
		do Memory.deAlloc(this);
		return;
	}
}